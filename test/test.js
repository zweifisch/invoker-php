// Generated by CoffeeScript 1.4.0
(function() {
  var Path, User, batch, invoke, should, _ref;

  should = chai.should();

  mocha.setup('bdd');

  batch = invoker.batch, invoke = invoker.invoke;

  _ref = invoker.classes, User = _ref.User, Path = _ref.Path;

  describe('User', function() {
    return describe('save', function() {
      return it('should add a user', function(done) {
        return batch(function(onBatchDone) {
          var user;
          User.listUsers()(function(users) {
            return users.length.should.equal(0);
          });
          user = new User('foo');
          user.save()(function(result) {
            return result.should.equal(true);
          });
          User.listUsers()(function(users) {
            return users.length.should.equal(1);
          });
          return onBatchDone(done);
        });
      });
    });
  });

  describe('Path', function() {
    return describe('access controll', function() {
      return it('should not allow access to certain methods', function(done) {
        should.not.exist(Path.scanDir);
        return invoke(['Path', 'scanDir'], function(result, code) {
          code.should.equal(404);
          return done();
        });
      });
    });
  });

}).call(this);
